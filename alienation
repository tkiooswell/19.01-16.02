#pragma once
using namespace std;
struct violation
{
    char* violat;
    violation* next;
};
 
struct node
{
    int number; 
    node* parent;
    node* left;
    node* right;    
 
    violation* head;
    violation* tail;
};
 
class GIA
{
private:
    int size;
    node* root;
    
public:
    GIA();
    ~GIA();
 
    void Add(int);
    void PrintAll(node*, int);
    void PrintNumber( int);
    void PrintRangeNumber(node*);
    node* ReturnRoot();
    void DeleteAll(node* temp);
};


#include "GIA.h"
using namespace std;
#include <iostream>

GIA::GIA()
{
    root = NULL;
    
    size = 0;
}

GIA::~GIA()
{
    DeleteAll(root);
}

node* GIA::ReturnRoot()
{
    return root;
}

void GIA::DeleteAll(node* temp)
{
    if (temp)
    {
        DeleteAll(temp->left);
        DeleteAll(temp->right);
        delete temp;
    }
}

void GIA::Add(int value)
{
    node* temp = new node;
    temp->number = value;
 
    temp->left = temp->right = temp->parent = NULL;
    
    if (!root)
        root = temp;
    else
    {
        node* temp1 = root;
        node* temp2 = NULL;
 
        while (temp1)
        {
            temp2 = temp1;
            if (value < temp1->number)
                temp1=temp1->left;
            else if (value>temp1->number)
                temp1 = temp1->right;
            else
                break;
        }
        
        if (value < temp2->number){
            temp2->left = temp;
            temp->parent = tmp2;
        }
        else if (value>temp2->number){
            temp2->right = temp;
            temp->parent = temp2;
        }
        else
            cout << "ключи равны\n";        
    }
}

void GIA::PrintAll(node* temp, int value)
{   
    if (temp)
    {
        PrintAll(temp->left, value + 1);        
        cout << "Номер машины: " << temp->number << endl;
        cout << "Нарушение: " << endl;
        PrintAll(temp->right, value + 1);
    }
}

void GIA::PrintNumber( int num)
{   
    if (root)
    {
        node* temp = root;
        int a = 0;
        while (temp)
        {
            if (num == temp->number)
            {
                k = 0;
                break;
            }
            if (num < temp->number){
                ++a;
                temp = temp->left;
            }
            else if (num>temp->number){
                ++a;
                temp = temp->right;
            }           
        }
        if (a == 0)
        {
            cout << "Номер машины: " << temp->number << endl;
            cout << "Нарушение: " << endl;
        }
        else
            cout << "Машины с таким номером в базе нету\n";
    
    }
}
